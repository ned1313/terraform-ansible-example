name: Provision Azure and Configure with Ansible

on:
  push:
    branches: [main]

permissions:
  id-token: write   # Required for OIDC authentication
  contents: read    # Required to checkout code

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Azure Login with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.10.0
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: terraform
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
          -backend-config="key=${{ secrets.BACKEND_KEY }}"

    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve

    - name: Create Ansible Inventory and Keys
      working-directory: ansible
      run: |
        echo "[web]" > inventory.ini
        echo "$(terraform -chdir='../terraform' output -raw public_ip_address) ansible_user=$(terraform -chdir='../terraform' output -raw vm_username) ansible_ssh_private_key_file=id_rsa ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory.ini
        echo "$(terraform -chdir='../terraform' output -raw private_key)" > id_rsa
        chmod 600 id_rsa
        cat inventory.ini


    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Ansible
      run: pip install ansible

    - name: Run Ansible Playbook
      working-directory: ansible
      run: ansible-playbook -i inventory.ini site.yml
